{
  "name": "server",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/server/src",
  "projectType": "application",
  "tags": [],
  "targets": {
    "_build": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "apps/server",
        "command": "webpack-cli build",
        "args": ["node-env=production"]
      },
      "configurations": {
        "development": {
          "args": ["node-env=development"]
        },
        "staging": {
          "args": ["node-env=staging"]
        }
      }
    },
    "build": {
      "dependsOn": ["_build"],
      "executor": "nx:run-commands",
      "options": {
        "cwd": "apps/server",
        "commands": ["tsc -p tsconfig.migrations.json"]
      },
      "configurations": {
        "staging": {
          "dependsOn": ["_build:staging"]
        },
        "production": {
          "dependsOn": ["_build:production"]
        }
      }
    },
    "start-db": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "apps/server",
        "envFile": "apps/server/.env.development",
        "commands": [
          "docker compose --env-file .env.development up -d && echo \"DB: ${DB_NAME}\""
        ]
      }
    },
    "stop-db": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "apps/server",
        "commands": ["docker compose --env-file .env.development down"]
      }
    },
    "serve": {
      "executor": "@nx/js:node",
      "defaultConfiguration": "development",
      "dependsOn": ["_build", "start-db"],
      "options": {
        "buildTarget": "server:_build",
        "runBuildTargetDependencies": false
      },
      "configurations": {
        "development": {
          "buildTarget": "server:_build:development"
        },
        "staging": {
          "buildTarget": "server:_build:staging"
        },
        "production": {
          "buildTarget": "server:_build:production"
        }
      }
    },
    "generate-migration": {
      "executor": "nx:run-commands",
      "outputs": ["{options.outputPath}"],
      "options": {
        "cwd": "apps/server",
        "commands": [
          "npx @dotenvx/dotenvx run --env-file=.env.development -- npx ts-node -r tsconfig-paths/register -O '{\"module\": \"commonjs\"}' --project tsconfig.app.json ../../node_modules/.bin/typeorm migration:generate -d src/datasource.config.ts src/migrations/{args.name}"
        ]
      }
    },
    "docker-build": {
      "dependsOn": ["build"],
      "executor": "nx:run-commands",
      "configurations": {
        "staging": {
          "dependsOn": ["build:staging"],
          "command": "docker build -f apps/server/deploy/docker/Dockerfile . -t eugenaz/private:server-${IMAGE_VERSION:-latest}"
        },
        "production": {
          "dependsOn": ["build:production"],
          "commands": [
            "docker build -f apps/server/deploy/docker/Dockerfile . -t eugenaz/private:server-${IMAGE_VERSION:-latest}",
            "docker push eugenaz/private:server-${IMAGE_VERSION:-latest}"
          ],
          "parallel": false
        }
      }
    },
    "release": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "apps/server",
        "spec": "patch",
        "parallel": false
      },
      "configurations": {
        "staging": {
          "commands": [
            {
              "forwardAllArgs": true,
              "command": "nx release -p server --specifier {args.spec} --skip-publish"
            },
            {
              "command": "IMAGE_VERSION=$(jq -r .version package.json) nx run server:docker-build:staging",
              "forwardAllArgs": false
            },
            {
              "command": "IMAGE_VERSION=$(jq -r .version package.json) envsubst < deploy/k8s/server-deployment.yaml | kubectl apply -f -",
              "forwardAllArgs": false
            }
          ]
        },
        "production": {
          "commands": [
            {
              "forwardAllArgs": true,
              "command": "nx release -p server --specifier {args.spec} --skip-publish"
            },
            {
              "command": "IMAGE_VERSION=$(jq -r .version package.json) nx run server:docker-build:production",
              "forwardAllArgs": false
            }
          ]
        }
      }
    }
  }
}
